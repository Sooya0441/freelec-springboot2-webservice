# @ H2 DB Setting
# * Driver Setting
# spring.datasource.driverClassName=org.h2.Driver
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
# * H2 JDBC URL Setting
# > Memory DB Setting
# spring.datasource.url=jdbc:h2:mem:testdb
# > File DB Setting
#spring.datasource.url=jdbc:h2:file:C:/Users/HLEE/IdeaProjects/freelec-springboot2-webservice/.h2_data/h2_data
spring.datasource.url=jdbc:mariadb://192.168.40.181:3306/freelec

# * Database User Account
# spring.datasource.username=sa
spring.datasource.username=freelec
# * Database User Password
# spring.datasource.password=
spring.datasource.password=123!@#
# spring.jpa.hibernate.ddl-auto Options ??? ?? Application ?? ??? DB ??? ??
# > update: 기존의 스키마를 유지하며 JPA에 의해 변경된 부분만 추가한다.
# > validate: 엔티티와 테이블이 정상적으로 매핑되어 있는지만 검증한다.
# > create: 기존에 존재하는 스키마를 삭제하고 새로 생성한다.
# > create-drop: 스키마를 생상하고 애플리케이션이 종료될 때 삭제한다.
# > none: 초기화 동작을 하지 않는다.
spring.jap.hibernate.ddl-auto=create
# * ddl-auto 옵션 주의 사항
# > 운영 장비에서는 절대 create, create-drop, update 를 사용하면 안됨.
# > 개발 초기 단계는 create 또는 update
# > 테스트 서버는 update 또는 validate
# > 스테이징과 운영 서버는 valicate 또는 none
# 설정을 권장.사용할지 여부를 결정.
# > 기본값은 false 이며, JPA 에 의한 자동 초기화 기능을 사용하려면 true 로 옵션 변경 필요.
spring.jpa.generate-ddl=true

# * spring.jpa.show_sql 속성은 JPA 가 생성한 SQL 문을 보여준다.
spring.jpa.show_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# spring.h2.console.enabled=true
spring.profiles.include=oauth
spring.session.store-type=jdbc
